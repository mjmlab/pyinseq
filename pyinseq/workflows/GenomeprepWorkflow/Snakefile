#!/usr/bin/python

"""

Snakefile for pyinseq pipeline

"""
from pathlib import Path
# Module imports
import pyinseq
from pyinseq.gbk_convert import build_fna_and_table_files
from pyinseq.settings import Settings
from pyinseq.logger import FORMATTER, add_fileHandler
from pyinseq.logger import logger as _logger

# Path to environment folder
ENVS = Path(pyinseq.__file__).parent.joinpath("envs")

### Grab from config
experiment = config['experiment']
reference_genome = config['genome']
output_dir = f"results/{experiment}"

# Settings object
settings = Settings(experiment)

# Setup pyinseq logger and add file handler to snakemake
add_fileHandler(_logger, settings.summary_log)
import logging
fh = logging.FileHandler(settings.summary_log, 'a')
logger.logger.addHandler(fh)
logger.quiet = True

rule all:
    input:
        f"{output_dir}/genome_lookup/genome.1.ebwt",


rule genome_prep:
    input:
        genebank=f"{reference_genome}"
    output:
        fna_file="{output_dir}/genome_lookup/genome.fna",
        ftt_file="{output_dir}/genome_lookup/genome.ftt",
    threads: config['threads']
    run:
        # Build needed genome tables
        build_fna_and_table_files(input.genebank, settings)


rule bowtie_index:
    input:
        fna_file=f"{output_dir}/genome_lookup/genome.fna",
    output:
        "{output_dir}/genome_lookup/genome.1.ebwt",
    threads: config['threads']
    conda:
        str(ENVS.joinpath("bowtie.yaml"))
    shell:
        "bowtie-build -q {input.fna_file} {output_dir}/genome_lookup/genome"